apply plugin: 'com.android.application'

// 依赖插件脚本
apply from: 'tinker-support.gradle'

//apply plugin: 'bugly'
//bugly {
//    appId = "xxxxxx"
//    appKey = "xxxxxx"
//}
//
//android.applicationVariants.all { variant ->
//    def buglyAppId = null;
//    def buglyAppKey = null;
//    if (variant.flavorName.equals("channel1")) { // 渠道1：channel1
//        buglyAppId = 'xxxxxx'
//        buglyAppKey = 'xxxxxx'
//    } else if (variant.flavorName.equals("channel2")) { // 渠道2：channel2
//        buglyAppId = 'xxxxxx'
//        buglyAppKey = 'xxxxxx'
//    }
//    if(buglyAppId != null) {
//        variant.ext.buglyAppId = buglyAppId
//    }
//    if (buglyAppKey != null) {
//        variant.ext.buglyAppKey = buglyAppKey
//    }
//}

android {
    signingConfigs {

        signRelese {
            keyAlias 'cip'
            keyPassword 'asd123'
            storeFile file('C:/Users/xuany/Androidws/workspace/other/AiyaEffectsAndroid/CIP/app/keystore/release.jks')
            storePassword 'asd123'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi'//, 'x86'//, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signRelese
        }
        debug {
            signingConfig signingConfigs.signRelese
        }
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation project(':commen')
    if (!isModule.toBoolean()) {
        implementation project(':avp_v')
        implementation project(':avp_p')
        implementation project(':cw')
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //arouter
//    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
}
